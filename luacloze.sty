\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{luacloze}

\RequirePackage{fontspec}
\RequirePackage{luatexbase-mcb}
\RequirePackage{xcolor}
\RequirePackage{kvoptions}

\directlua{
  luacloze = require("luacloze")
}

% Inspired by:
% Three things you can do with LuaTEX that
% would be extremely painful otherwise
%   --Paul Isambert; TUGBoat Volume 31, Number 3, 2010

\SetupKeyvalOptions{
  family=LC,
  prefix=LC@
}

\DeclareStringOption[0.4pt]{thickness}
\DeclareStringOption[3pt]{descender}
\DeclareStringOption[{0,0,1}]{textcolor}
\DeclareStringOption[{0,0,0}]{linecolor}
% Affects only \clozefix
\DeclareStringOption[l]{align}
\DeclareStringOption[6cm]{width}

\DeclareVoidOption{show}{\directlua{luacloze.options.show_text = true}}
\DeclareVoidOption{hide}{\directlua{luacloze.options.show_text = false}}

\ProcessKeyvalOptions{LC}

\newcommand{\pdf@colorstack}[1]{\csname\string\color@#1\endcsname}

\newcommand{\setluavalues}{%
  \definecolor{clozelinecolor}{rgb}{\LC@linecolor}%
  \definecolor{clozetextcolor}{rgb}{\LC@textcolor}%
%
  \directlua{
    luacloze.options.thickness = '\LC@thickness'
    luacloze.options.descender = '\LC@descender'
    luacloze.options.linecolor = '\pdf@colorstack{clozelinecolor}'
    luacloze.options.textcolor = '\pdf@colorstack{clozetextcolor}'
    luacloze.options.width = '\LC@width'
    luacloze.options.align = '\LC@align'

    luacloze.get_options(luacloze.options)
  }%
}

\setluavalues

\newcommand{\setcloze}[1]{\setkeys{LC}{#1}\setluavalues}

%-----------------------------------------------------------------------
% Public macros
%-----------------------------------------------------------------------

\newlength{\clozemargin}
\setlength{\clozemargin}{0.1cm}

%%
% \cloze{Lorem ipsum}
%%
\newcommand{\cloze}[1]{%
  \directlua{luacloze.register("basic")}%
  \cloze@marker@start{basic}%
  {%
    \clozefont%
    \hspace{\clozemargin}%
    #1%
    \hspace{\clozemargin}%
  }%
  \cloze@marker@stop{basic}%
}

%%
% \clozefix{Lorem ipsum}
%
% Creates a cloze on one line with a fixed length.
%%
\newcommand{\clozefix}[2][]{%
  \directlua{luacloze.register("fix")}%
  \cloze@marker@start{fix}%
  {%
    \clozefont%
    #2%
  }%
  \cloze@marker@stop{fix}%
}

%%
% \begin{clozepar}
% Lorem ipsum.
% \end{clozepar}
\newenvironment{clozepar}%
{%
  \par%
  \directlua{luacloze.register("par")}%
  \clozefont%
  \strut\cloze@marker@start{par}%
}%
{%
  \cloze@marker@stop{par}%
  \par%
  \directlua{luacloze.unregister("par")}%
}

%%
% \clozeend{Lorem ipsum}
%
% This command forces a line break and creates a cloze line that extends
% to the end of the text line.
%%
\newcommand{\clozeend}[1]{%
  \directlua{register("end")}%
  \cloze@marker@start{end}%
  #1%
  \newline%
  \strut%
  \cloze@marker@stop{end}%
}

%%
% \showclozetext
%%
\newcommand{\showclozetext}{\directlua{luacloze.options.show_text = true}}

%%
% \hideclozetext
%%
\newcommand{\hideclozetext}{\directlua{luacloze.options.show_text = false}}

%-----------------------------------------------------------------------
% Formats
%-----------------------------------------------------------------------

%%
% \clozefont
%%
\newcommand{\clozefont}{\itshape}

%-----------------------------------------------------------------------
% Helper
%-----------------------------------------------------------------------

%%
% \cloze@marker
%%
\newcommand{\cloze@marker@start}[1]{%
  \directlua{luacloze.marker_start("#1")}%
}

%%
% \cloze@marker
%%
\newcommand{\cloze@marker@stop}[1]{%
  \strut\directlua{luacloze.marker_stop("#1")}%
}
