\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{luacloze}

\RequirePackage{fontspec}
\RequirePackage{luatexbase-mcb}
\RequirePackage{xcolor}
\RequirePackage{kvoptions}

\directlua{
  luacloze = require("luacloze")
}

% LC = luacloze
\SetupKeyvalOptions{
  family=LC,
  prefix=LC@
}

\DeclareStringOption[0.4pt]{thickness}
\DeclareStringOption[3pt]{descender}
\DeclareStringOption[{0,0,1}]{textcolor}
\DeclareStringOption[{0,0,0}]{linecolor}
% Affects only \clozefix
\DeclareStringOption[l]{align}
\DeclareStringOption[2cm]{width}

\DeclareVoidOption{show}{\directlua{luacloze.options.show_text = true}}
\DeclareVoidOption{hide}{\directlua{luacloze.options.show_text = false}}

\ProcessKeyvalOptions{LC}

% LCL = luacloze local
\define@key{LCL}{descender}[]{\def\LCL@descender{#1}}
% Affects only \clozefix
\define@key{LCL}{align}[]{\def\LCL@align{#1}}
\define@key{LCL}{width}[]{\def\LCL@width{#1}}
\define@key{LCL}{hide}[true]{\def\LCL@hide{#1}}
\define@key{LCL}{show}[true]{\def\LCL@show{#1}}


\newcommand{\pdf@colorstack}[1]{\csname\string\color@#1\endcsname}

\newcommand{\setluavalues}{%
  \definecolor{clozelinecolor}{rgb}{\LC@linecolor}%
  \definecolor{clozetextcolor}{rgb}{\LC@textcolor}%
%
  \directlua{
    luacloze.options.thickness = '\LC@thickness'
    luacloze.options.descender = '\LC@descender'
    luacloze.options.linecolor = '\pdf@colorstack{clozelinecolor}'
    luacloze.options.textcolor = '\pdf@colorstack{clozetextcolor}'
    luacloze.options.width = '\LC@width'
    luacloze.options.align = '\LC@align'

    luacloze.get_options(luacloze.options)
  }%
}

\setluavalues

\newcommand{\setcloze}[1]{\setkeys{LC}{#1}\setluavalues}

%-----------------------------------------------------------------------
% Public macros
%-----------------------------------------------------------------------

\newlength{\clozemargin}
\setlength{\clozemargin}{0.1cm}

%%
% \cloze{Lorem ipsum}
%%
\newcommand{\cloze}[1]{%
  \strut\directlua{
    luacloze.register("basic")
    luacloze.marker('basic', 'start')
  }%
  {%
    \clozefont%
    \hspace{\clozemargin}%
    #1%
    \hspace{\clozemargin}%
  }%
  \strut\directlua{luacloze.marker('basic', 'stop')}%
}

%%
% \clozefix{Lorem ipsum}
%
% Creates a cloze on one line with a fixed length.
%%
\newcommand{\clozefix}[2][]{%
  \setkeys{LCL}{width,descender,align,hide=unset,show=unset}%
  \setkeys{LCL}{#1}%
  \directlua{luacloze.register("fix")}%
  \strut\directlua{
    local values = {
      ['descender'] = '\LCL@descender',
      ['align'] = '\LCL@align',
      ['width'] = '\LCL@width',
      ['hide'] = '\LCL@hide',
      ['show'] = '\LCL@show'
    }
    luacloze.marker('fix', 'start', values)
  }%
  {%
    \clozefont%
    #2%
  }%
  \strut\directlua{luacloze.marker('fix', 'stop')}%
}

%%
% \begin{clozepar}
% Lorem ipsum.
% \end{clozepar}
\newenvironment{clozepar}%
{%
  \par%
  \strut\directlua{
    luacloze.register('par')
    luacloze.marker('par', 'start')
  }%
  \clozefont%
}%
{%
  \strut\directlua{luacloze.marker('par', 'stop')}%
  \par%
  \directlua{luacloze.unregister('par')}%
}

%%
% \clozetoend{Lorem ipsum}
%
% This command forces a line break and creates a cloze line that extends
% to the end of the text line.
%%
\newcommand{\clozetoend}[1]{%
  \directlua{luacloze.register('toend')}%
  \strut\directlua{luacloze.marker('topar', 'start')}%
  #1%
  \strut\directlua{luacloze.marker('topar', 'stop')}%
  \par%
}

%%
% \clozefont
%%
\newcommand{\clozefont}{\itshape}
